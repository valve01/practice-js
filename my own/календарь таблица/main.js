// //getDay - метод объекта Date, который возвращает индекс дня недели, где 0 - это воскресенье, 6 - суббота
// // Создадим собственную фукцию с названием getDay, которая будет возвращать день недели в привычном нам формате - начало недели - с понедельника.
// function getDay(date) {
// 	let day = date.getDay();
// 	// Здесь getDay это метод объекта Date - получение дня недели
// 	// Проверяем, если day - воскресенье - то временно присваиваем ему значение 7(и таким образом переносим воскресенье в конец списка дней недели) (на следующем шаге смещаем все индексы влево, чтобы у понедельника он стал 0)
// 	if (day == 0) day = 7;
// 	return day - 1;
// 	// так у нас индекс понедельника сменится с 1 на 0, вторника в 2 на 1 и т.д. а воскресенья 6
// }
// // Проверяем работу функции
// // console.log(getDay(new Date()))

// // Создаем функцию, которая будет рендерить весь контент внутри каждого месяца, она принимает параметры: element - тег в разметке, куда мы хотим вставить наш календарь, год и месяц , для которых мы этот календарь рендерим.
// function renderMonthContent(element, year, month) {
// 	// Через квериселектор определяем html элемент, куда будем вставлять сгенерированный календарь, если переменной дать такое же имя как название параметра (element), то вроде как мы перезапишем, то что мы передаем в этот параметр на то что будет в переменной. И в конце можно будет прописать так: element.innerHTML = contentTable
// 	elementHtml = document.querySelector(element);
// 	// Чтобы более привычно вводить номера месяцев не с 0, а с 1, создим переменную, котрая будет вычитать единицу из каждого номера месяца, что мы ей передадим, таким образом в функцию Date мы будем передавать monthIndex, где январь -имеет индекс 0, при том что захотев получить календарь на январь мы передадим в параметр month - 1.
// 	let monthIndex = month - 1;
// 	// new Date(year, month, date, hours, minutes, seconds, ms) - Создать объект Date с заданными компонентами в местном часовом поясе. Обязательны только первые два аргумента. Параметр date здесь представляет собой день месяца. Если параметр не задан, то принимается значение 1. Записываем интересующ дату в переменную date.
// 	let date = new Date(year, monthIndex);
// 	// Записываем шаблонную строку, которую мы будем добавлять в разметку в переменную contentTable
// 	let contentTable = `
// <table>
// <caption>${month}.${year}</caption>
// <tr>
// <th>ПН</th>
// <th>ВТ</th>
// <th>СР</th>
// <th>ЧТ</th>
// <th>ПТ</th>
// <th>СБ</th>
// <th>ВС</th>
// </tr>
// <tr>

// `;

// 	// Добавляем пустые ячейки, если месяц начинается не с понедельника. getDay(date) - вернет нам индекс дня недели (0-6)
// 	for (let i = 0; i < getDay(date); i++) {
// 		//  И мы будем добавлять пустую ячейку в таблицу на каждой итерации, пока, i не сравняется с индексом дня недели первого дня месяца.
// 		contentTable += "<td></td>";
// 	}
// 	// Генерируем все дни месяца
// 	// Цикл while будет выполнятся пока индекс месяца который мы получаем через date.getMonth() совпадет с тем, который хранится в переменной monthIndex
// 	while (date.getMonth() == monthIndex) {
// 		// Генерируем число месяца при помощи тэга <td> и конкатенации, внутри тэга прописываем день, получаем его при помощи date.getDate(), сначала это будет день 1.
// 		contentTable += "<td>" + date.getDate() + "</td>";
// 		// Добавляем переход на новую строку таблицы. Если getDay(date) - это воскресенье (его индекс 6), то поделив его на 7, получаем в остатке 6 (оператор % - возвращает остаток при делении), если это условие выполняется, то закрываем текущий тэг </tr> и открываем новый <tr>, следующая итерация цикла while начнется с новой строки
// 		if (getDay(date) % 7 == 6) {
// 			contentTable += "</tr><tr>";
// 		}
// 		// Следующие методы позволяют установить компоненты даты и времени:
// 		// setFullYear(year, [month], [date])
// 		// setMonth(month, [date])
// 		// setDate(date)
// 		// setHours(hour, [min], [sec], [ms])
// 		// setMinutes(min, [sec], [ms])
// 		// setSeconds(sec, [ms])
// 		// setMilliseconds(ms)
// 		// Устанавливаем число месяца на следующий день. Таким образом мы позволяем свершиться следующей итерации. На первой итерации date.getDate()==1, (т.к. мы не задавали этот параметр при создании даты). На следующей итерации date.getDate()==2 и т.д. Когда мы подойдем к концу месяца date.setDate() не получится установить на число, которого нет в переданном месяце и месяц переключится на следующий(т.е date.getMonth()увеличится на 1 и условие date.getMonth() == monthIndex не будет работать ) (так как в объекте Date работает автоисправление и например 32января будет распознано как 1 февраля), в таком случае наш цикл while остановится и новое число не будет сгенерировано.
// 		date.setDate(date.getDate() + 1);
// 	}
// 	// Добавляем пустые ячейки, если месяц заканчивается не на воскресенье
// 	// Пишем условие, если getDay(date) - не понедельник (чтобы не выводить полный ряд пустых ячеек)
// 	// Т.к. на последней итерации цикла while date.setDate() установилось на 1 число следующего месяца, то getDay(date) вернет нам день недели этого 1 числа
// 	if (getDay(date) != 0) {
// 		// Пока getDay(date) не прошел всю неделю (не стал==7) мы будем добавлять пустую ячеку в строку таблицы.
// 		for (let i = getDay(date); i < 7; i++) {
// 			contentTable += "<td></td>";
// 		}
// 	}

// 	// Закрываем нашу таблицу и добавляем разметку в выбранный элемент
// 	contentTable += "</tr></table>";
// 	elementHtml.innerHTML = contentTable;
// }

// renderMonthContent(".month-content", 2023, 2);

// Весь код

function getDay(date) {
	let day = date.getDay();
	if (day == 0) day = 7;
	return day - 1;
}
function renderMonthContent(element, year, month) {
	elementHtml = document.querySelector(element);
	let monthIndex = month - 1;
	let date = new Date(year, monthIndex);
	let contentTable = `
<table>
<caption>${month}.${year}</caption>
<tr>
<th>ПН</th>
<th>ВТ</th>
<th>СР</th>
<th>ЧТ</th>
<th>ПТ</th>
<th>СБ</th>
<th>ВС</th>
</tr>
<tr>
`;
	for (let i = 0; i < getDay(date); i++) {
		contentTable += "<td></td>";
	}
	while (date.getMonth() == monthIndex) {
		contentTable += "<td>" + date.getDate() + "</td>";
		if (getDay(date) % 7 == 6) {
			contentTable += "</tr><tr>";
		}
		date.setDate(date.getDate() + 1);
	}
	if (getDay(date) != 0) {
		for (let i = getDay(date); i < 7; i++) {
			contentTable += "<td></td>";
		}
	}
	contentTable += "</tr></table>";
	elementHtml.innerHTML = contentTable;
}
renderMonthContent(".month-content", 2023, 2);
