// Бесконечный слайдер
// ==============================================================================
// {
// 	// 1 Находим на странице нужные элементы
// 	// Находим на странице коллекцию слайдов
// 	const mainSliderImages = document.querySelectorAll(".slider-item");
// 	// Слайдер
// 	const slider = document.querySelector(".gritting-slider-line-wrapper");
// 	// Кнопка следующй
// 	const nextSlideBtn = document.querySelector(".next");

// 	// 2 Объявляем переменную и присваиваем ей пустой массив, это будет массив url адресов наших слайдов
// 	let sliderArray = [];
// 	// 3 Обходим коллекцию слайдов
// 	mainSliderImages.forEach((image, i) => {
// 		// 4 И каждому элементу массива, начиная с элемента с индексом 0, присваиваем url адрес слайда в порядке соответстующем расположению в html
// 		sliderArray[i] = image.src;
// 		// 5 А также удаляем каждую картинку из разметки
// 		image.remove();
// 	});

// 	// 6 Объявляем вспомогательные переменные
// 	// Переменная в которой находится индекс которому соответсвует адрес нужного слайда в массиве
// 	let step = 0;
// 	// Вспомогательная переменная offset
// 	let offset = 0;
// 	// Переменная, в которой будет записана текущая ширина слайдера в браузере
// 	let width;
// 	//7 Пишем функцию, которая будет отрисовывать слайды на странице
// 	function render() {
// 		// Определяем текущую ширину слайдера и записываем ее в width
// 		width = slider.offsetWidth;
// 		// Создаем новый html элемент img и записываем его в переменную img
// 		let img = document.createElement("img");
// 		// Добавляем вновь созданному элементу класс slider-item
// 		img.classList.add("slider-item");
// 		// Присваиваем вновь созданному элементу значение src из массива sliderArray (сначала будет присвоен адрес элемента массива с индексом 0, ведь мы же объявили step = 0)
// 		img.src = sliderArray[step];
// 		// Задаем слайду ширину, равную ширине слайдера
// 		img.style.width = width + "px";
// 		// Задаем слайду смещение от левого края на расстояние равное произведению ширины слайдера и вспомогательной переменной offset (которая объявлена перед функцией и ей присвоено offset = 0. Таким образом смещение первого слайда будет 0)
// 		img.style.left = width * offset + "px";
// 		// Добавляем вновь созданный элемент на страницу дочерним элементом слайдера (в конец html элемента с классом gritting-slider-line-wrapper)
// 		slider.appendChild(img);
// 		// Пишем проверку, если при увеличении индекса массива, он становится равным длинне коллекции (это значит что мы начнем ссылаться на несуществующий элемент массива)
// 		if (step + 1 == mainSliderImages.length) {
// 			// Тогда мы присваиваем переменной значение 0, которое соответсвует первому слайду в массиве
// 			step = 0;
// 			// Иначе увеличиваем значение индекса на 1 (чтобы отрендерить при следующем запуске функции следующий слайд)
// 		} else {
// 			step++;
// 		}
// 		// В конце итерации присваиваем вспомогательной переменной значение 1 чтобы смещение второго слайда было (width*1+"px")
// 		offset = 1;
// 		//8 Теперь запустив функцию один раз у нас отрендерится первый слайд, запустив второй раз, у нас отрендериться ещё и второй слайд справа от первого, запустив третий раз, отрендериться первый слайд, второй, а третий наложится на втрой и перекроет его (справа от не отобразится, т.к. для этого требуется offset = 2)
// 	}

// 	// 9 Отрендерим на странице 2 слайда
// 	render();
// 	render();

// 	// 10 Пишем функцию, которая сначала смещает оба слайда влево на расстояние равное ширине слайдера
// 	function left() {
// 		// Для начала отключаем возможнось вызова функции по клику во времы выполнения самой этой функции (чтобы не было множественного накладывани слайдов друг на друга справа от слайдера)
// 		nextSlideBtn.onclick = null;
// 		// Находим на странице нашу коллекцию из двух отрендереных слайдов
// 		let sliderOfTwoImages = document.querySelectorAll(".slider-item");
// 		// Объявляем вспомогательную переменную offset2
// 		let offset2 = 0;
// 		// Присваиваем width - значение текущей ширины слайдера
// 		width = slider.offsetWidth;
// 		// Обходим нашу коллекцию из 2х слайдов и
// 		sliderOfTwoImages.forEach((image) => {
// 			// сдвигаем каждый из них от левого края вправо на количество пикселей равное произведению вспомогательной переменной offset2 и текущей ширины слайдера минус (-) сама ширина слайдера. Т.о. image[0] сдвинется влево на ширину слайдера (займет позицию на координатной прямой = (0*width-width), а image[1] тоже сдвинется влево на ширину слайдера (и займет позицию на координатной прямой = (1*width-width), т.е. =0)
// 			image.style.left = offset2 * width - width + "px";
// 			// Увеличиваем значение вспомогательной переменоой. Она не возрастает выше 2 и сбрасыавется на 0 вначале выполнения функции, т.к. увеличивается только в рамках forEach, а у нас только 2 итерации, т.к. только 2 элемента нод-листа
// 			offset2++;
// 			// 11 Теперь у нас есть функция которая двигает оба слайда влево
// 		});
// 		// 15 Оборачиваем удаление старого и добавление нового слайда в setTimeout, чтобы эти действия происходили строго после проигрывания анимации сдвига. Соответственно значение задержки (timeout) должно быть равно продолжительности transition в css.
// 		setTimeout(function () {
// 			// 12 Теперь нам нужно удалить первый слай, который уехал влево от окна слайдера. Он всегда будет под индексом 0
// 			sliderOfTwoImages[0].remove();
// 			// 13 Вызываем снова функцию отрисовки слайда. Отрисуется следующий в списке слайд, т.к. значение переменной step увеличено прошлым вызовом функции render() и сохранено. Отрисуется он справа от слайдера, т.к. offset = 1 оно также увеличено прошлым вызовом функции render() и сохранено.
// 			render();
// 			// 14 Возвращаем возможность срабатывания настоящей функции по событию клик
// 			nextSlideBtn.onclick = left;
// 		}, 1000);
// 	}

// 	// 16 Вешаем прослушку. По событию клик запускаем  функцию left. left здесь название обработчика - не надо тут () ему лепить.
// 	nextSlideBtn.onclick = left;
// 	// 17 Запускаем автоматическую смену слайдов с периодом 5сек.
// 	setInterval(left, 5000);
// }


// Весь код сразу
// {
	const mainSliderImages = document.querySelectorAll(".slider-item");
	const slider = document.querySelector(".gritting-slider-line-wrapper");
	const nextSlideBtn = document.querySelector(".next");
	let sliderArray = [];
	mainSliderImages.forEach((image, i) => {
		sliderArray[i] = image.src;
		image.remove();

	});
	let step = 0;
	let offset = 0;
	let width;
	function render() {
		width = slider.offsetWidth;
		let img = document.createElement("img");
		img.classList.add("slider-item");
		img.src = sliderArray[step];
		img.style.width = width + "px";
		img.style.left = width * offset + "px";
		slider.appendChild(img);
		if (step + 1 == mainSliderImages.length) {
			step = 0;
		} else {
			step++;
		}
		offset = 1;
	}
	render();
	render();
// 	function left() {
// 		nextSlideBtn.onclick = null;
// 		let sliderOfTwoImages = document.querySelectorAll(".slider-item");
// 		let offset2 = 0;
// 		width = slider.offsetWidth;
// 		sliderOfTwoImages.forEach((image) => {
// 			image.style.left = offset2 * width - width + "px";
// 			offset2++;
// 		});
// 		setTimeout(function () {
// 			sliderOfTwoImages[0].remove();
// 			render();
// 			nextSlideBtn.onclick = left;
// 		}, 1000);
// 	}
// 	nextSlideBtn.onclick = left;
// 	setInterval(left, 5000);
// }
